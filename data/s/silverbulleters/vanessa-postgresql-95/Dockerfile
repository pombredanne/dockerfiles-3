# vim:set ft=dockerfile:  
FROM debian:jessie  
  
RUN nc -z w3 consul-io.node.cloud.consul 3142 && echo 'Acquire::http { Proxy
"http://consul-io.node.cloud.consul:3142"; };' >> /etc/apt/apt.conf.d/01proxy
|| echo "not found proxy, skip"  
RUN echo 'precedence ::ffff:0:0/96 100' >> /etc/gai.conf  
  
# explicitly set user/group IDs  
RUN groupadd -r postgres --gid=999 && useradd -r -g postgres --uid=999
postgres  
  
# grab gosu for easy step-down from root  
RUN gpg --keyserver pool.sks-keyservers.net --recv-keys
B42F6819007F00F88E364FD4036A9C25BF357DD4  
RUN apt-get update && apt-get install -y --no-install-recommends ca-
certificates wget && rm -rf /var/lib/apt/lists/* \  
&& wget -O /usr/local/bin/gosu
"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-
architecture)" \  
&& wget -O /usr/local/bin/gosu.asc
"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-
architecture).asc" \  
&& gpg --verify /usr/local/bin/gosu.asc \  
&& rm /usr/local/bin/gosu.asc \  
&& chmod +x /usr/local/bin/gosu \  
&& apt-get purge -y --auto-remove ca-certificates wget  
  
# make the "ru_RU.UTF-8" locale so postgres will be utf-8 enabled by default  
RUN apt-get update && apt-get install -y locales wget \  
&& localedef -i uk_UA -c -f UTF-8 -A /usr/share/locale/locale.alias
uk_UA.UTF-8 \  
&& localedef -i ru_RU -c -f UTF-8 -A /usr/share/locale/locale.alias
ru_RU.UTF-8 \  
&& update-locale LANG=ru_RU.UTF-8  
  
ENV LANG ru_RU.UTF-8  
ENV LC_MESSAGES "POSIX"  
RUN mkdir /docker-entrypoint-initdb.d  
  
#RUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys
B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8  
ENV PG_MAJOR 9.5  
ENV PG_VERSION 9.5.4-1.pgdg80+1  
RUN echo 'deb http://1c.postgrespro.ru/deb/ jessie main' >
/etc/apt/sources.list.d/pgdg.list  
RUN wget --quiet -O - http://1c.postgrespro.ru/keys/GPG-KEY-POSTGRESPRO-1C |
apt-key add -  
ADD postgrepinning /etc/apt/preferences.d/postgres  
  
RUN apt-get update \  
&& apt-get install -y \  
postgresql-pro-1c-$PG_MAJOR \  
&& rm -rf /var/lib/apt/lists/*  
  
RUN mkdir -p /var/run/postgresql && chown -R postgres /var/run/postgresql  
  
ENV PATH /usr/lib/postgresql/$PG_MAJOR/bin:$PATH  
ENV PGDATA /var/lib/postgresql/data  
  
ENV PGLOG /var/log/postgresql  
  
ENV PGEXTDATA /data/v8systemspace  
  
VOLUME /var/lib/postgresql/data  
VOLUME /var/log/postgresql  
VOLUME /data/v8systemspace  
  
COPY docker-entrypoint.sh /  
  
# добавил установку powa мониторига от dabo https://github.com/dalibo/docker  
WORKDIR /usr/local/src  
  
RUN apt-get update && apt-get install -y \  
gcc \  
jq \  
make \  
postgresql-contrib-pro-1c-$PG_MAJOR \  
postgresql-server-dev-pro-1c-$PG_MAJOR \  
postgresql-plpython-pro-1c-$PG_MAJOR \  
wget \  
&& wget -O- $(wget -O- https://api.github.com/repos/dalibo/powa-
archivist/releases/latest|jq -r '.tarball_url') | tar -xzf - \  
&& wget -O- $(wget -O-
https://api.github.com/repos/dalibo/pg_qualstats/releases/latest|jq -r
'.tarball_url') | tar -xzf - \  
&& wget -O- $(wget -O-
https://api.github.com/repos/dalibo/pg_stat_kcache/releases/latest|jq -r
'.tarball_url') | tar -xzf - \  
&& wget -O- $(wget -O-
https://api.github.com/repos/dalibo/hypopg/releases/latest|jq -r
'.tarball_url') | tar -xzf - \  
&& wget -O- $(wget -O-
https://api.github.com/repos/rjuju/pg_track_settings/releases/latest|jq -r
'.tarball_url') | tar -xzf - \  
&& for f in $(ls); do cd $f; make install; cd ..; rm -rf $f; done \  
&& apt-get purge -y --auto-remove gcc jq make postgresql-server-dev-
pro-1c-$PG_MAJOR wget \  
&& rm -rf /var/lib/apt/lists/*  
  
# configure powa-archivist  
ADD setup_powa-archivist.sh /docker-entrypoint-initdb.d/  
ADD install_all.sql /usr/local/src/  
  
ENTRYPOINT ["/docker-entrypoint.sh"]  
  
EXPOSE 5432  
CMD ["postgres"]  

