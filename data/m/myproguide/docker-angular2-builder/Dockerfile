FROM ubuntu:14.04.5  
# Code below are from https://github.com/aws/aws-codebuild-docker-
images/blob/master/ubuntu/ubuntu-base/14.04/Dockerfile  
# Building git from source code:  
# Ubuntu's default git package is built with broken gnutls. Rebuild git with
openssl.  
##########################################################################  
RUN apt-get update \  
&& apt-get install -y --no-install-recommends \  
wget python python2.7-dev fakeroot ca-certificates tar gzip zip \  
autoconf automake bzip2 file g++ gcc imagemagick libbz2-dev libc6-dev
libcurl4-openssl-dev \  
libdb-dev libevent-dev libffi-dev libgeoip-dev libglib2.0-dev libjpeg-dev
libkrb5-dev \  
liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses-
dev libpng-dev \  
libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev
libxml2-dev libxslt-dev \  
libyaml-dev make patch xz-utils zlib1g-dev unzip curl \  
&& apt-get -qy build-dep git \  
&& apt-get -qy install libcurl4-openssl-dev git-man liberror-perl \  
&& mkdir -p /usr/src/git-openssl \  
&& cd /usr/src/git-openssl \  
&& apt-get source git \  
&& cd $(find -mindepth 1 -maxdepth 1 -type d -name "git-*") \  
&& sed -i -- 's/libcurl4-gnutls-dev/libcurl4-openssl-dev/' ./debian/control \  
&& sed -i -- '/TEST\s*=\s*test/d' ./debian/rules \  
&& dpkg-buildpackage -rfakeroot -b \  
&& find .. -type f -name "git_*ubuntu*.deb" -exec dpkg -i \\{\\} \; \  
&& rm -rf /usr/src/git-openssl \  
# Install dependencies by all python images equivalent to buildpack-
deps:jessie  
# on the public repos.  
&& rm -rf /var/lib/apt/lists/* \  
&& apt-get clean  
  
RUN wget "https://bootstrap.pypa.io/get-pip.py" -O /tmp/get-pip.py \  
&& python /tmp/get-pip.py \  
&& pip install awscli==1.11.25 \  
&& rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*  
  
# Code below are from https://github.com/nodejs/docker-
node/blob/master/8.2/Dockerfile  
  
RUN groupadd --gid 1000 node \  
&& useradd --uid 1000 \--gid node --shell /bin/bash --create-home node  
  
# gpg keys listed at https://github.com/nodejs/node#release-team  
RUN set -ex \  
&& for key in \  
9554F04D7259F04124DE6B476D5A82AC7E37093B \  
94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \  
FD3A5288F042B6850C66B31F09FE44734EB7990E \  
71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \  
DD8F2338BAE7501E3DD5AC78C273792F7D83545D \  
B9AE9905FFD7803F25714661B63B535A4C206CA9 \  
C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \  
56730D5401028683275BD23C23EFEFE93C4CFFFE \  
; do \  
gpg --keyserver pgp.mit.edu --recv-keys "$key" || \  
gpg --keyserver keyserver.pgp.com --recv-keys "$key" || \  
gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ; \  
done  
  
ENV NPM_CONFIG_LOGLEVEL info  
ENV NODE_VERSION 8.2.1  
  
RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \  
&& case "${dpkgArch##*-}" in \  
amd64) ARCH='x64';; \  
ppc64el) ARCH='ppc64le';; \  
*) echo "unsupported architecture"; exit 1 ;; \  
esac \  
&& curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-
linux-$ARCH.tar.xz" \  
&& curl -SLO --compressed
"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \  
&& gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \  
&& grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum
-c - \  
&& tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-
components=1 \  
&& rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc
SHASUMS256.txt \  
&& ln -s /usr/local/bin/node /usr/local/bin/nodejs  
  
ENV YARN_VERSION 0.27.5  
  
RUN set -ex \  
&& for key in \  
6A010C5166006599AA17F08146C2130DFD2497F5 \  
; do \  
gpg --keyserver pgp.mit.edu --recv-keys "$key" || \  
gpg --keyserver keyserver.pgp.com --recv-keys "$key" || \  
gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ; \  
done \  
&& curl -fSLO --compressed
"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \  
&& curl -fSLO --compressed
"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc" \  
&& gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc
yarn-v$YARN_VERSION.tar.gz \  
&& mkdir -p /opt/yarn \  
&& tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \  
&& ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \  
&& ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \  
&& rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz  
  
# Code by myself  
RUN npm install -g --unsafe-perm @angular/cli@1.4.2 @angular/compiler-
cli@4.3.1 typescript@2.4.2 @angular/compiler@4.3.1  
  
CMD [ "node" ]  

