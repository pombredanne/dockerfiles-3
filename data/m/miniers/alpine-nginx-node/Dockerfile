FROM alpine  
MAINTAINER Scott Mebberson (https://github.com/smebberson/docker-alpine)  
# Add s6-overlay  
ENV S6_OVERLAY_VERSION=v1.18.1.5 \  
GODNSMASQ_VERSION=1.0.7 \  
NODE_VERSION=v7.5.0 \  
NPM_VERSION=4  
  
RUN apk add \--update \--no-cache bind-tools curl libcap && \  
curl -sSL https://github.com/just-
containers/s6-overlay/releases/download/${S6_OVERLAY_VERSION}/s6-overlay-
amd64.tar.gz \  
| tar xfz - -C / && \  
curl -sSL https://github.com/janeczku/go-
dnsmasq/releases/download/${GODNSMASQ_VERSION}/go-dnsmasq-min_linux-amd64 -o
/bin/go-dnsmasq && \  
chmod +x /bin/go-dnsmasq && \  
apk del curl && \  
rm -rf /var/cache/apk/* && \  
# create user and give binary permissions to bind to lower port  
addgroup go-dnsmasq && \  
adduser -D -g "" -s /bin/sh -G go-dnsmasq go-dnsmasq && \  
setcap CAP_NET_BIND_SERVICE=+eip /bin/go-dnsmasq  
# Install nginx  
RUN apk add \--update nginx && \  
rm -rf /var/cache/apk/* && \  
chown -R nginx:www-data /var/lib/nginx  
  
  
RUN apk add \--update git curl make gcc g++ python linux-headers libgcc
libstdc++ && \  
curl -sSL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.gz
| tar -xz && \  
cd /node-${NODE_VERSION} && \  
./configure \--prefix=/usr \--without-snapshot && \  
make -j$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \  
make install && \  
cd / && \  
npm install -g npm@${NPM_VERSION} && \  
apk del gcc g++ linux-headers && \  
rm -rf /etc/ssl /node-${NODE_VERSION} /usr/include \  
/usr/share/man /tmp/* /var/cache/apk/* /root/.npm /root/.node-gyp \  
/usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc
/usr/lib/node_modules/npm/html  
  
ADD root /  
  
EXPOSE 80 443  
  
ENTRYPOINT ["/init"]  
CMD []  

