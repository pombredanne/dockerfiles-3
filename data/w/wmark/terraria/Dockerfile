FROM blitznote/debootstrap-amd64:16.04  
MAINTAINER W. Mark Kubacki <wmark@hurrikane.de>  
LABEL org.label-schema.vendor="W. Mark Kubacki" \  
org.label-schema.name="tshock, the Terraria server" \  
org.label-schema.vcs-type="git" \  
org.label-schema.vcs-url="https://github.com/wmark/docker-terraria"  
  
RUN get-gpg-key 0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF | apt-key add \  
&& printf "deb http://download.mono-project.com/repo/debian
wheezy/snapshots/4.2 main" > /etc/apt/sources.list.d/mono-xamarin.list \  
&& printf 'Package: libmono-*\nPin: origin "download.mono-project.com"\nPin-
Priority: 510\n' > /etc/apt/preferences.d/prefer-mono-xamarin \  
&& apt-get -q update \  
&& apt-get -y install \  
net-tools psmisc \  
mono-runtime mono-runtime-sgen \  
libmono-corlib4.0-cil libmono-data-tds4.0-cil libmono-system-core4.0-cil
libmono-system-numerics4.0-cil \  
libmono-system-data-linq4.0-cil libmono-system-net4.0-cil libmono-system-
runtime4.0-cil \  
libmono-system-runtime-serialization4.0-cil libmono-system-runtime-
serialization-formatters-soap4.0-cil \  
libmono-system-xml4.0-cil libmono-system-xml-linq4.0-cil libmono-system-xml-
serialization4.0-cil \  
libmono-sqlite4.0-cil libmysql6.4-cil libmono-system-net-http4.0-cil \  
shared-mime-info- ifupdown- iproute2- isc-dhcp-client- \  
&& apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \  
&& rm -rf /var/cache/debconf /var/lib/dpkg /usr/share/debhelper \  
&& rm -rf /usr/lib/x86_64-linux-gnu/perl /usr/share/perl
/usr/lib/x86_64-linux-gnu/libperl.* \  
&& rm -rf /usr/share/{man,doc} \  
&& rm -f /usr/share/mime/packages/freedesktop.org.xml \  
&& rm -rf /usr/share/X11/locale  
  
RUN mkdir -p /opt/tshock \  
&& cd /tmp \  
&& curl --silent --show-error --fail --location -o tshock.zip \  
$(curl --silent --show-error --fail --location --header 'Accept:
application/json' \  
https://api.github.com/repos/NyxStudios/TShock/releases/latest \  
| jq -r '.assets[] | select(.browser_download_url|endswith(".zip")) |
.browser_download_url') \  
&& unzip tshock.zip -d /opt/tshock/ && rm tshock.zip \  
&& mkdir -p /var/lib/tshock/config /var/lib/tshock/log /var/lib/tshock/worlds
\  
&& adduser --disabled-password --no-create-home --gecos '' \--home
/var/lib/tshock tshock \  
&& chown -R tshock:tshock /var/lib/tshock \  
&& for fname in ConfigDescriptions.txt PermissionsDescriptions.txt
ServerSideConfigDescriptions.txt RestDescriptions.txt BuffList.txt \  
Items-1_0.txt Items-1_1.txt Items-1_2.txt Items-1_3.txt NPCs.txt Prefixes.txt
Projectiles.txt; do \  
ln -s {/var/lib/tshock/config,/opt/tshock}/${fname}; \  
done \  
&& ln -s /var/lib/tshock/log/ServerLog.txt /opt/tshock/ServerLog.txt  
  
EXPOSE 7777  
USER tshock  
WORKDIR /opt/tshock  
VOLUME /var/lib/tshock/config /var/lib/tshock/log /var/lib/tshock/worlds  
# Failsafe to prevent building an image in wich tshock will not start at all.  
# Oddly this works sometimes on my local machine, but not on Docker's build
servers.  
RUN timeout --preserve-status --kill-after=20s 15s \  
mono --server --gc=sgen -O=all \  
/opt/tshock/TerrariaServer.exe \  
-worldpath /var/lib/tshock/worlds \  
-configpath /var/lib/tshock/config \  
-logpath /var/lib/tshock/log \  
-dump &>/dev/null; \  
echo $? \  
&& ! ls -al /opt/tshock | grep -q -F "tshock tshock" \  
&& ! grep -q -F "aborted due to an exception"
/var/lib/tshock/log/ServerLog.txt \  
&& rm /var/lib/tshock/log/ServerLog.txt  
  
ENTRYPOINT ["mono", "--server", "--gc=sgen", "-O=all", \  
"/opt/tshock/TerrariaServer.exe", \  
"-ip", "0.0.0.0", "-port", "7777", \  
"-worldpath", "/var/lib/tshock/worlds", \  
"-configpath", "/var/lib/tshock/config", \  
"-logpath", "/var/lib/tshock/log"]  
CMD ["-autocreate", "1", "-world",
"/var/lib/tshock/worlds/AutoGenerated-1.wld"]  

