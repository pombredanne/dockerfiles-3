# Start from a Debian image with the latest version of Go installed  
# and a workspace (GOPATH) configured at /go.  
FROM marcbachmann/libvips  
MAINTAINER tomas@aparicio.me  
  
# Server port to listen  
ENV PORT 9000  
# Go version to use  
ENV GOLANG_VERSION 1.6  
# gcc for cgo  
RUN apt-get update && apt-get install -y \  
gcc curl git libc6-dev make ca-certificates \  
\--no-install-recommends \  
&& rm -rf /var/lib/apt/lists/*  
  
ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-
amd64.tar.gz  
ENV GOLANG_DOWNLOAD_SHA256
5470eac05d273c74ff8bac7bef5bad0b5abbd1c4052efbdbc8db45332e836b0b  
  
RUN curl -fsSL --insecure "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz \  
&& echo "$GOLANG_DOWNLOAD_SHA256 golang.tar.gz" | sha256sum -c - \  
&& tar -C /usr/local -xzf golang.tar.gz \  
&& rm golang.tar.gz  
  
ENV GOPATH /go  
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH  
  
RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"  
WORKDIR $GOPATH  
  
# Fetch the latest version of the package  
RUN go get -u golang.org/x/net/context  
RUN go get -u github.com/daaku/go.httpgzip  
RUN go get -u github.com/rs/cors  
RUN go get -u github.com/tj/go-debug  
RUN go get -u gopkg.in/h2non/bimg.v1  
RUN go get -u gopkg.in/h2non/filetype.v0  
RUN go get -u gopkg.in/throttled/throttled.v2  
RUN go get -u gopkg.in/throttled/throttled.v2/store/memstore  
  
COPY . .  
RUN make build  
  
ENV IMAGINARY_ARGS -enable-url-source -allowed-origins
https://img.crazylister.com  
  
# Run the outyet command by default when the container starts.  
CMD /go/bin/imaginary $IMAGINARY_ARGS  
  
# Expose the server TCP port  
EXPOSE 9000  

